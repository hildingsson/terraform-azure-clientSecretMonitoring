name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      landingzone:
        description: 'Select the landing zone to deploy'
        required: true
        type: choice
        options:
          - all
          - core/management
          - core/identity
          - core/connectivity
      environment:
        description: 'Select the environment (only for corp and online landing zones)'
        required: false
        type: choice
        options:
          - all
          - dev
          - qa
          - prod
      action:
        description: 'Select the Terraform action to perform'
        required: true
        type: choice
        options:
          - validate
          - plan
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: Terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Display Directory Structure
        run: |
          ls -alR

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Define Landing Zones
        id: define_landingzones
        run: |
          if [ "${{ github.event.inputs.landingzone }}" == "All" ]; then
            echo "landingzones_list='core/management core/identity core/connectivity corp/datalandingzone-exodus online/webapp-exodus'" >> $GITHUB_ENV
          else
            echo "landingzones_list='${{ github.event.inputs.landingzone }}'" >> $GITHUB_ENV
          fi

      - name: Terraform Actions
        run: |
          for LZ in ${{ env.landingzones_list }}; do
            echo "Processing Landing Zone: $LZ"

            # Determine if environment is needed
            if [[ "$LZ" == corp/* || "$LZ" == online/* ]]; then
              if [ -z "${{ github.event.inputs.environment }}" ]; then
                echo "Environment is required for $LZ."
                exit 1
              fi

              if [ "${{ github.event.inputs.environment }}" == "All" ]; then
                ENVIRONMENTS="dev qa prod"
              else
                ENVIRONMENTS="${{ github.event.inputs.environment }}"
              fi

              for ENV in $ENVIRONMENTS; do
                echo "Processing Environment: $ENV"
                WORKING_DIR="landingzones/$LZ/$ENV"
                cd $WORKING_DIR

                terraform init

                # Execute Terraform Action
                case "${{ github.event.inputs.action }}" in
                  validate)
                    terraform validate
                    ;;
                  plan)
                    terraform plan
                    ;;
                  apply)
                    terraform apply -auto-approve
                    ;;
                  destroy)
                    terraform destroy -auto-approve
                    ;;
                  *)
                    echo "Invalid action: ${{ github.event.inputs.action }}"
                    exit 1
                    ;;
                esac

                cd -
              done
            else
              WORKING_DIR="landingzones/$LZ"
              cd $WORKING_DIR

              terraform init

              # Execute Terraform Action
              case "${{ github.event.inputs.action }}" in
                validate)
                  terraform validate
                  ;;
                plan)
                  terraform plan
                  ;;
                apply)
                  terraform apply -auto-approve
                  ;;
                destroy)
                  terraform destroy -auto-approve
                  ;;
                *)
                  echo "Invalid action: ${{ github.event.inputs.action }}"
                  exit 1
                  ;;
              esac

              cd -
            fi
          done